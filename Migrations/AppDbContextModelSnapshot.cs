// <auto-generated />
using System;
using API_Labb4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Labb4.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibraryLabb4.Interest", b =>
                {
                    b.Property<int>("InterestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestID");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestID = 1,
                            Description = "Move that body",
                            Name = "Dancing"
                        },
                        new
                        {
                            InterestID = 2,
                            Description = "Play games",
                            Name = "Gaming"
                        },
                        new
                        {
                            InterestID = 3,
                            Description = "Hunting while standing still",
                            Name = "Fishing"
                        });
                });

            modelBuilder.Entity("ClassLibraryLabb4.Link", b =>
                {
                    b.Property<int>("LinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkID"));

                    b.Property<int?>("InterestID")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkID");

                    b.HasIndex("InterestID");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LinkID = 1,
                            InterestID = 1,
                            URL = "https://www.youtube.com/watch?v=aKv54g_v1mo&list=RD71XngoEKuGk&index=8"
                        },
                        new
                        {
                            LinkID = 2,
                            InterestID = 2,
                            URL = "https://store.steampowered.com/"
                        },
                        new
                        {
                            LinkID = 3,
                            InterestID = 3,
                            URL = "https://en.wikipedia.org/wiki/Fishing"
                        });
                });

            modelBuilder.Entity("ClassLibraryLabb4.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            Email = "attorney@law.com",
                            Name = "Justin Case",
                            Phone = "0735466834"
                        },
                        new
                        {
                            PersonID = 2,
                            Email = "patrikskattberg@fakemail.com",
                            Name = "Patrik Skattberg",
                            Phone = "0761960876"
                        },
                        new
                        {
                            PersonID = 3,
                            Email = "thismail@mail.com",
                            Name = "Mark Hammil",
                            Phone = "0737754669"
                        });
                });

            modelBuilder.Entity("ClassLibraryLabb4.PersonInterest", b =>
                {
                    b.Property<int>("PersonInterestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonInterestID"));

                    b.Property<int>("InterestID")
                        .HasColumnType("int");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.HasKey("PersonInterestID");

                    b.HasIndex("InterestID");

                    b.HasIndex("PersonID");

                    b.ToTable("PersonInterests");
                });

            modelBuilder.Entity("ClassLibraryLabb4.Link", b =>
                {
                    b.HasOne("ClassLibraryLabb4.Interest", "Interest")
                        .WithMany("Links")
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("ClassLibraryLabb4.PersonInterest", b =>
                {
                    b.HasOne("ClassLibraryLabb4.Interest", "Interest")
                        .WithMany()
                        .HasForeignKey("InterestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibraryLabb4.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ClassLibraryLabb4.Interest", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
